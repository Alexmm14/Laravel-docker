# Usa una imagen base de Ubuntu
FROM ubuntu:latest

# Configura el entorno para evitar la interactividad
ENV DEBIAN_FRONTEND=noninteractive

# Actualiza el sistema e instala las dependencias necesarias
RUN apt-get update \
    && apt-get install -y php \
    && apt-get install -y composer \
    && apt-get install -y vim \
    && apt-get install -y apache2 libapache2-mod-php \
    && apt-get install -y php-xml \
    && apt-get install -y git \
    && apt-get install -y systemctl \
    && apt-get install -y php-pgsql \
    && apt install -y php-curl \
    && a2enmod php8.1 \
    && apt-get clean \
    && service apache2 restart \
    && rm -rf /var/lib/apt/lists/*



# Clona el proyecto desde GitHub
RUN  cd var/www/html \
    &&  git clone https://github.com/Alexmm14/Laravel-docker.git
    
#Si te manda un error de autenticación al crear el contenedor, saca un token en tu perfil de github
#Descomenta la siguiente line y coloca tu token
# RUN git clone https://<Aquí tu token>@github.com/Alexmm14/Laravel-docker.git proyectoSitios
# Establece el directorio de trabajo
WORKDIR /var/www/html/Laravel-docker
# Instala las dependencias de Composer y genera la clave de aplicación

COPY .envexample /var/www/html/Laravel-docker/proyectoSitios/.env

RUN cd /var/www/html/Laravel-docker/proyectoSitios \
    && composer install \
    && chown -R www-data:www-data /var/www/html/Laravel-docker/proyectoSitios/storage \
    && chown -R www-data:www-data /var/www/html/Laravel-docker/proyectoSitios/bootstrap/cache \
    && cd /var/www/html/Laravel-docker/proyectoSitios/ \
    && php artisan key:generate

#Copia el archivo de configuración de apache para la aplicación laravel
COPY mi-sitio.conf /etc/apache2/sites-available
COPY apache2.conf /etc/apache2




#Deshabilitar el archivo default de la configuración de apache2
RUN a2dissite 000-default.conf \
    #Das permisos al usuario de apache 2 a la configuración
    && chown -R www-data:www-data /etc/apache2/sites-available/mi-sitio.conf \
    # permite crear direcciones URL alternativas a las dinámicas generadas por la programación de nuestro sitio web
    && a2enmod rewrite \
    #Aplica las configuraciones para mi-sitio
    && a2ensite mi-sitio.conf \
    && systemctl restart apache2  
    
# Expone el puerto 80 (o el puerto que necesites)
EXPOSE 80


# Comando para iniciar apache y que se mantenga abierto el contenedor
CMD systemctl start apache2 \
    && tail -f /dev/null
